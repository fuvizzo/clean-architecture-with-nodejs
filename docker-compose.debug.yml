version: "3.4"

services:
  app:
    image: express-server
    container_name: express-server
    build:
      context: app
      target: dev
    environment:
      NODE_ENV: development
      MONGO_URL: ${MONGO_URL}
      REDIS_URL: ${REDIS_URL}
      REDIS_CACHE_EXPIRATION_PERIOD: ${REDIS_CACHE_EXPIRATION_PERIOD}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      ACCESS_TOKEN_LIFETIME: ${ACCESS_TOKEN_LIFETIME}
      LISTENING_PORT: ${LISTENING_PORT}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      OPEN_WEATHER_API_KEY: ${OPEN_WEATHER_API_KEY}
    ports:
      - 3000:${LISTENING_PORT}
      - 9229:9229
    volumes:
      - ./app:/usr/src/app
    links:
      - mongo
      - redis
    command: ["nodemon", "--inspect=0.0.0.0:9229", "src/index.js"]
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
  mongo:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./.docker/mongodb/config/mongod.conf:/etc/mongod.conf
      - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
      - ./.docker/mongodb/data/db/:/data/db/
      #- ./.docker/mongodb/data/log/:/var/log/mongodb/
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
    command: ["-f", "/etc/mongod.conf"]
